1. Write the query that will show how many different customers made purchases.

SELECT  COUNT(DISTINCT master_id) 
FROM Flo;

2. Write the query that will return the total number of purchases and turnover.

SELECT ROUND(SUM(customer_value_total_ever_offline + customer_value_total_ever_online), 2) AS total sales
,SUM(order_num_total_ever_online + order_num_total_ever_offline) AS total orders
FROM Flo;

3. Write the query that will return the average turnover per purchase.

SELECT ROUND(SUM(customer_value_total_ever_offline + customer_value_total_ever_online), 2)/ SUM(order_num_total_ever_online + order_num_total_ever_offline)
FROM Flo

4. Write the query that will return the total turnover and number of purchases made through the last shopping channel (last_order_channel).

SELECT last_order_channel
,ROUND(SUM(customer_value_total_ever_offline + customer_value_total_ever_online), 2) AS total sales
,SUM(order_num_total_ever_online + order_num_total_ever_offline) AS total orders
GROUP BY last_order_channel

5. Write the query showing the total turnover obtained in the store type mix.

SELECT store_type
,ROUND(SUM(customer_value_total_ever_offline + customer_value_total_ever_online), 2) AS total sales
FROM Flo
GROUP BY store_type

6. Write the query that will return the number of purchases in the year breakdown (first_order_date of the customer as a year).
take as basis)

SELECT YEAR(first_order_date ) AS year
,SUM(order_num_total_ever_online + order_num_total_ever_offline) AS total orders
FROM Flo
GROUP BY YEAR(first_order_date)
ORDER BY 1

7. Write the query that will calculate the average turnover per purchase in the last shopping channel.

SELECT last_order_channel
,ROUND(SUM(customer_value_total_ever_offline + customer_value_total_ever_online), 2)/ SUM(order_num_total_ever_online + order_num_total_ever_offline)
FROM Flo
GROUP BY last_order_channel

8. Write the query that returns the most popular category in the last 12 months.

SELECT interested_in_categories_12
,COUNT(*) 
FROM Flo
GROUP BY interested_in_categories_12
ORDER BY 2 DESC

9. Write the query that returns the most preferred store_type information.

SELECT TOP 1
store_type
,COUNT(*)
FROM Flo
GOUP BY store_type
ORDER BY 2 DESC

10. Based on the last order channel, write a query that returns the most popular category and how much shopping was done from this category.

SELECT DISTINCT last_order_channel
(SELECT TOP 1
interested_in_categories_12
FROM Flo
GROUP BY interested_in_categories_12
ORDER BY SUM(order_num_total_ever_online + order_num_total_ever_offline) DESC
) AS CATEGORY

,(SELECT TOP 1
SUM(order_num_total_ever_online + order_num_total_ever_offline) 
FROM Flo
GROUP BY interested_in_categories_12
ORDER BY SUM(order_num_total_ever_online + order_num_total_ever_offline) DESC
) AS  TOTAL ORDERS

FROM Flo

11. Write the query that returns the ID of the person who makes the most purchases.

SELECT TOP 1
 master_id
FROM Flo
GROUP BY master_id
ORDER BY SUM(customer_value_total_ever_offline + customer_value_total_ever_online) DESC


12. Average turnover per purchase the person who shops the most
Write the query that returns it.

SELECT ROUND((D.TOTAL_SALES/TOTAL_ORDERS), 2)
FROM(
      SELECT TOP 1
      master_id
      ,SUM(customer_value_total_ever_offline + customer_value_total_ever_online), 2) AS TOTAL_SALES
      ,SUM(order_num_total_ever_online + order_num_total_ever_offline) AS TOTAL_ORDERS
      FROM Flo
      GROUP BY master_id
      ORDER BY TOTAL_SALES DESC
) AS D	

13. Query that returns the average shopping day (shopping frequency) of the top 100 people who shop the most (on a turnover basis)
write.

SELECT D.master_id
,D.TOTAL_SALES
,D.TOTAL_ORDERS
,ROUND((D.TOTAL_SALES/TOTAL_ORDERS), 2) AS AVG_ORDER
,DATEDIFF((DAY, first_order_day, last_order_day) AS DIFF_DAY
,ROUND((DAY, first_order_day, last_order_day)/D.TOTAL_ORDERS,1)) AS AVG_DAY
FROM(
      SELECT TOP 100
      master_id
      ,first_order_date
      ,last_order_day
      ,SUM(customer_value_total_ever_offline + customer_value_total_ever_online), 2) AS TOTAL_SALES
      ,SUM(order_num_total_ever_online + order_num_total_ever_offline) AS TOTAL_ORDERS
      FROM Flo
      GROUP BY master_id
      ,first_order_date
      ,last_order_day
      ORDER BY TOTAL_SALES DESC
) D

14. Write the query that returns the ID of the last person who shopped. (There is more than one shopper ID on the max deadline)

SELECT master_id
,last_order_date
FROM Flo 
WHERE last_order_date = (SELECT MAX(last_order_date) FROM Flo)






























